groups: []

resources:
- name: bbr-tool
  type: github-release
  source:
    access_token: ((concourse_github_release.access_token))
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
- name: bosh-cli
  type: github-release
  source:
    access_token: ((concourse_github_release.access_token))
    owner: cloudfoundry
    repository: bosh-cli
- name: gcs-backup
  type: gcs-resource
  source:
    bucket: concourse-prod-backup
    json_key: ((backups_bucket_json_key))
    versioned_file: prod-db-backup.tgz
- name: midnight
  type: time
  source:
    location: America/Toronto
    start: 1:00 AM
    stop: 2:00 AM

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

jobs:
- name: backup-prod-env
  plan:
  - get: midnight
    trigger: true
  - get: bbr-tool
  - get: bosh-cli
  - task: backup-prod-env
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/unit
      params:
        BOSH_CLIENT: ((bosh_client.id))
        BOSH_CLIENT_SECRET: ((bosh_client.secret))
        BOSH_DEPLOYMENT: concourse-prod
        BOSH_ENVIRONMENT: ((bosh_target))
        CA_CERT: ((bosh_ca_cert.ca_cert))
      run:
        path: sh
        args:
        - -exc
        - |
          #!/bin/bash
          mv bbr-tool/bbr-*-linux-amd64 /usr/local/bin/bbr
          chmod +x /usr/local/bin/bbr
          mv bosh-cli/bosh-cli-*-linux-amd64 /usr/local/bin/bosh
          chmod +x /usr/local/bin/bosh
          bbr deployment backup --artifact-path=bbr_artifacts
          bosh -d concourse-prod dep | grep concourse/ | awk '{print $1}' > bbr_artifacts/concourse_version
          tar -zcf bbr_artifacts/bbr_backup.tgz bbr_artifacts/*
      inputs:
      - name: bbr-tool
      - name: bosh-cli
      outputs:
      - name: bbr_artifacts
  - put: gcs-backup
    params:
      file: bbr_artifacts/bbr_backup.tgz
      inputs:
      - name: bbr_artifacts

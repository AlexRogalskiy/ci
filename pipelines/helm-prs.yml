---
resource_types:
- name: pull-request
  type: registry-image
  source: {repository: teliaoss/github-pr-resource}

resources:
- name: chart-pr
  type: pull-request
  icon: source-pull
  source:
    repository: concourse/concourse-chart
    base_branch: ((pr_base_branch))
    access_token: ((pr_access_token))

- name: helm-charts
  type: git
  icon: github-circle
  source:
    uri: https://github.com/helm/charts.git
    branch: master

- name: concourse
  type: git
  icon: github-circle
  source:
    uri: https://github.com/concourse/concourse.git
    branch: ((concourse_base_branch))

- name: ci
  type: git
  icon: github-circle
  source:
    uri: https://github.com/concourse/ci.git
    branch: master

- name: concourse-image
  type: registry-image
  icon: docker
  source:
    repository: concourse/concourse
    tag: ((concourse_image_tag))
    username: ((docker.username))
    password: ((docker.password))

- name: unit-image
  type: registry-image
  icon: docker
  source:
    repository: concourse/unit
    username: ((docker.username))
    password: ((docker.password))

jobs:
- name: k8s-topgun
  serial: true
  public: true
  on_failure:
    put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: failure, context: k8s-topgun}
    tags: [k8s-topgun]
  on_success:
    put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: success, context: k8s-topgun}
    tags: [k8s-topgun]
  plan:
  - in_parallel:
    - get: chart-pr
      tags: [k8s-topgun]
    - get: helm-charts
      tags: [k8s-topgun]
    - get: concourse
      tags: [k8s-topgun]
    - get: concourse-image
      tags: [k8s-topgun]
    - get: ci
      tags: [k8s-topgun]
    - get: unit-image
      tags: [k8s-topgun]
  - put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: pending, context: k8s-topgun}
    get_params: {list_changed_files: true}
    tags: [k8s-topgun]
  - task: k8s-topgun
    tags: [k8s-topgun]
    file: ci/tasks/k8s-topgun.yml
    input_mapping:
      concourse-chart: chart-pr
      concourse-rc-image: concourse-image
    image: unit-image
    params:
      IN_CLUSTER: "true"
      KUBE_CONFIG: ((topgun_kube_config))
      CONCOURSE_IMAGE_NAME: ((concourse_image_name))

- name: version-bump-check
  public: true
  on_failure:
    put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: failure, context: version-bump-check}
    tags: [k8s-topgun]
  on_success:
    put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: success, context: version-bump-check}
    tags: [k8s-topgun]
  plan:
  - in_parallel:
    - get: chart-pr
      trigger: true
      version: every
      tags: [k8s-topgun]
      params:
        integration_tool: checkout
    - get: ci
      tags: [k8s-topgun]
    - get: unit-image
      tags: [k8s-topgun]
  - put: update-pr-status
    resource: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: pending, context: version-bump-check}
    get_params: {list_changed_files: true}
    tags: [k8s-topgun]
  - task: version-bump-check
    tags: [k8s-topgun]
    image: unit-image
    config:
      platform: linux
      inputs:
      - name: chart-pr
      run:
        path: bash
        args:
        - -cex
        - |
          cd chart-pr
          git diff master HEAD -- Chart.yaml | egrep '\+version: [0-9]+\.[0-9]+\.[0-9]+'


- name: lint-and-install-test
  public: true
  on_failure:
    put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: failure, context: lint-and-install-test}
    tags: [k8s-topgun]
  on_success:
    put: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: success, context: lint-and-install-test}
    tags: [k8s-topgun]
  plan:
  - in_parallel:
    - get: chart-pr
      trigger: true
      version: every
      tags: [k8s-topgun]
    - get: ci
      tags: [k8s-topgun]
    - get: unit-image
      tags: [k8s-topgun]
  - put: update-pr-status
    resource: chart-pr
    inputs: [chart-pr]
    params: {path: chart-pr, status: pending, context: lint-and-install-test}
    get_params: {list_changed_files: true}
    tags: [k8s-topgun]
  - in_parallel:
    - task: lint-check
      tags: [k8s-topgun]
      image: unit-image
      input_mapping: {concourse: chart-pr}
      config:
        platform: linux
        inputs:
        - name: concourse
        run:
          path: bash
          args:
          - -cex
          - |
            helm lint concourse
    - task: basic-install-test
      tags: [k8s-topgun]
      image: unit-image
      input_mapping: {concourse: chart-pr}
      params:
        KUBE_CONFIG: ((topgun_kube_config))
      config:
        platform: linux
        inputs:
        - name: concourse
        run:
          path: bash
          args:
          - -ceu
          - |
            mkdir -p ~/.kube

            if [ ! -f ~/.kube/config ]; then
              echo "$KUBE_CONFIG" > ~/.kube/config
            fi
            releasename="pr-$(cat concourse/.git/resource/pr)-$(head -c 6 concourse/.git/resource/base_sha)"
            # this needs to be updated for migrating to helm 3
            helm init --client-only
            helm dependency update ./concourse
            helm install ./concourse --name "$releasename"
            sleep 10
            helm delete --purge "$releasename"

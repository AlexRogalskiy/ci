# the following vars must be specified:
#
#   ((branch))              only PRs against this branch will be run
#   ((dev_image_tag))       the tag to use for the dev image
#   ((concourse_image_tag)) the tag to use for the concourse image for upgrade/downgrade test in integration

---
resource_types:
- name: bosh-deployment
  type: registry-image
  source: {repository: cloudfoundry/bosh-deployment-resource}

- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource
    tag: v0.21.0

resources:
- name: concourse-base
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/concourse
    branch: ((branch))

- name: concourse-pr
  type: pull-request
  icon: source-pull
  check_every: 2m
  source:
    repository: concourse/concourse
    access_token: ((pull_requests_access_token))
    base_branch: ((branch))

- name: validator
  type: github-release
  icon: github
  source:
    owner: clarafu
    repository: release-me

- name: ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ci

- name: concourse-image
  type: registry-image
  icon: docker
  source:
    repository: concourse/concourse
    tag: ((concourse_image_tag))
    username: ((docker.username))
    password: ((docker.password))

- name: dev-image
  type: registry-image
  icon: docker
  source:
    repository: concourse/dev
    tag: ((dev_image_tag))
    username: ((docker.username))
    password: ((docker.password))

- name: unit-image
  type: registry-image
  icon: docker
  source: {repository: concourse/unit}

- name: postgres-image
  type: registry-image
  icon: docker
  source: {repository: postgres}

- name: vault-image
  type: registry-image
  icon: registry-image
  source: {repository: vault}

- name: oci-build-task
  type: registry-image
  icon: docker
  source: {repository: vito/oci-build-task}

jobs:
- name: unit
  public: true
  max_in_flight: 3
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: failure, context: unit}
    tags: [pr]
    get_params: {skip_download: true}
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: success, context: unit}
    tags: [pr]
    get_params: {skip_download: true}
  plan:
  - in_parallel:
    - get: concourse-pr
      trigger: true
      version: every
      tags: [pr]
    - get: concourse-base
      tags: [pr]
    - get: unit-image
      tags: [pr]
    - get: ci
      tags: [pr]
  - put: concourse-status-update
    resource: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: pending, context: unit}
    tags: [pr]
    get_params: {list_changed_files: true, skip_download: true}
  - task: check-migration-order
    timeout: 5m
    file: ci/tasks/check-migration-order.yml
    tags: [pr]
  - task: yarn-analyse
    attempts: 3
    file: ci/tasks/yarn-analyse.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]
  - task: yarn-test
    attempts: 3
    file: ci/tasks/yarn-test.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]
  - task: yarn-benchmark
    attempts: 3
    file: ci/tasks/yarn-benchmark.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]
  - task: unit
    image: unit-image
    attempts: 3
    timeout: 1h
    file: ci/tasks/unit.yml
    input_mapping: {concourse: built-concourse}
    tags: [pr]

- name: testflight
  public: true
  max_in_flight: 3
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: failure, context: testflight}
    tags: [pr]
    get_params: {skip_download: true}
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: success, context: testflight}
    tags: [pr]
    get_params: {skip_download: true}
  plan:
  - in_parallel:
    - get: concourse-pr
      trigger: true
      version: every
      tags: [pr]
    - get: oci-build-task
      tags: [pr]
    - get: dev-image
      params: {format: oci}
      tags: [pr]
    - get: postgres-image
      params: {format: oci}
      tags: [pr]
    - get: ci
      tags: [pr]
  - put: concourse-status-update
    resource: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: pending, context: testflight}
    tags: [pr]
    get_params: {list_changed_files: true, skip_download: true}
  - task: yarn-build
    attempts: 3
    file: ci/tasks/yarn-build.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]
  - task: build
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      params:
        CONTEXT: built-concourse
        IMAGE_ARG_base_image: dev-image/image.tar
      inputs: [{name: built-concourse}, {name: dev-image}]
      outputs: [{name: image}]
      caches: [{path: cache}]
      run: {path: build}
    tags: [pr]
  - across:
    - var: runtime
      values:
      - guardian
      - containerd
      max_in_flight: all
    task: testflight
    timeout: 1h
    privileged: true
    file: ci/tasks/docker-compose-testflight.yml
    input_mapping: {concourse: built-concourse, dev-image: image}
    params:
      RUNTIME: ((.:runtime))
      DOWNLOAD_CLI: false
    tags: [pr]

- name: validate-labels
  public: true
  max_in_flight: 3
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: failure, context: validate-labels}
    tags: [pr]
    get_params: {skip_download: true}
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: success, context: validate-labels}
    tags: [pr]
    get_params: {skip_download: true}
  plan:
  - in_parallel:
    - get: concourse-pr
      trigger: true
      version: every
      tags: [pr]
    - get: ci
      tags: [pr]
    - get: validator
      tags: [pr]
  - put: concourse-status-update
    resource: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: pending, context: validate-labels}
    tags: [pr]
    get_params: {list_changed_files: true, skip_download: true}
  - task: validate-pr
    timeout: 5m
    file: ci/tasks/validate-pr.yml
    tags: [pr]
    params:
      GITHUB_TOKEN: ((concourse_github_dummy.access_token))

- name: containerd-integration
  public: true
  max_in_flight: 3
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: failure, context: containerd-integration}
    tags: [pr]
    get_params: {skip_download: true}
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: success, context: containerd-integration}
    tags: [pr]
    get_params: {skip_download: true}
  plan:
  - in_parallel:
    - get: concourse-pr
      trigger: true
      version: every
      tags: [pr]
    - get: dev-image
      tags: [pr]
    - get: ci
      tags: [pr]
  - put: concourse-status-update
    resource: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: pending, context: containerd-integration}
    tags: [pr]
    get_params: {list_changed_files: true, skip_download: true}
  - task: integration
    image: dev-image
    privileged: true
    timeout: 1h
    file: ci/tasks/containerd-integration.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]


- name: watsjs
  public: true
  max_in_flight: 3
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: failure, context: watsjs}
    tags: [pr]
    get_params: {skip_download: true}
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: success, context: watsjs}
    tags: [pr]
    get_params: {skip_download: true}
  plan:
  - in_parallel:
    - get: concourse-pr
      trigger: true
      version: every
      tags: [pr]
    - get: dev-image
      params: {format: oci}
      tags: [pr]
    - get: postgres-image
      params: {format: oci}
      tags: [pr]
    - get: ci
      tags: [pr]
    - get: oci-build-task
      tags: [pr]
  - put: concourse-status-update
    resource: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: pending, context: watsjs}
    tags: [pr]
    get_params: {list_changed_files: true, skip_download: true}
  - task: yarn-build
    attempts: 3
    file: ci/tasks/yarn-build.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]
  - task: build
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      params:
        CONTEXT: built-concourse
        IMAGE_ARG_base_image: dev-image/image.tar
      inputs: [{name: built-concourse}, {name: dev-image}]
      outputs: [{name: image}]
      caches: [{path: cache}]
      run: {path: build}
    tags: [pr]
  - task: watsjs
    attempts: 3
    timeout: 1h
    privileged: true
    file: ci/tasks/docker-compose-watsjs.yml
    input_mapping: {concourse: built-concourse, dev-image: image}
    tags: [pr]

- name: integration
  public: true
  max_in_flight: 3
  on_failure:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: failure, context: integration}
    tags: [pr]
    get_params: {skip_download: true}
  on_success:
    put: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: success, context: integration}
    tags: [pr]
    get_params: {skip_download: true}
  plan:
  - in_parallel:
    - get: concourse-pr
      trigger: true
      version: every
      tags: [pr]
    - get: concourse-image
      params: {format: oci}
      tags: [pr]
    - get: dev-image
      params: {format: oci}
      tags: [pr]
    - get: postgres-image
      params: {format: oci}
      tags: [pr]
    - get: vault-image
      params: {format: oci}
      tags: [pr]
    - get: ci
      tags: [pr]
    - get: oci-build-task
      tags: [pr]
  - put: concourse-status-update
    resource: concourse-pr
    inputs: [concourse-pr]
    params: {path: concourse-pr, status: pending, context: integration}
    tags: [pr]
    get_params: {list_changed_files: true, skip_download: true}
  - task: yarn-build
    attempts: 3
    file: ci/tasks/yarn-build.yml
    input_mapping: {concourse: concourse-pr}
    tags: [pr]
  - task: build
    image: oci-build-task
    privileged: true
    config:
      platform: linux
      params:
        CONTEXT: built-concourse
        IMAGE_ARG_base_image: dev-image/image.tar
      inputs: [{name: built-concourse}, {name: dev-image}]
      outputs: [{name: image}]
      caches: [{path: cache}]
      run: {path: build}
    tags: [pr]
  - task: integration
    timeout: 1h
    privileged: true
    input_mapping: {concourse: built-concourse, dev-image: image}
    file: ci/tasks/integration.yml

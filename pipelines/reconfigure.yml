resource_types:
- name: slack-notifier
  type: registry-image
  source: {repository: mockersf/concourse-slack-notifier}

resources:
- name: pipelines-and-tasks
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ci
    paths:
    - pipelines
    - tasks

- name: baggageclaim-ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/baggageclaim
    paths: [ci]

- name: concourse-for-k8s
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/concourse-for-k8s.git
    private_key: ((concourse_for_k8s_token))
    paths:
    - ci

- name: concourse-for-platform-automation
  type: git
  icon: github
  source:
    uri: https://github.com/pivotal/concourse-for-platform-automation.git

- name: flight-attendant-ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/flight-attendant
    paths:
    - ci

- name: ctop-ci
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/ctop
    paths:
    - ci

- name: ruby-alpine-image
  type: registry-image
  source:
    repository: ruby
    tag: rc-alpine

- name: oxygen-mask
  type: git
  icon: github
  source:
    uri: https://github.com/concourse/oxygen-mask

- name: notify
  type: slack-notifier
  icon: slack
  source:
    url: ((slack_hook))

- name: latest-concourse
  type: github-release
  source:
    owner: concourse
    repository: concourse
    access_token: ((concourse_github_release.access_token))

jobs:
- name: reconfigure-self
  plan:
  - get: pipelines-and-tasks
    trigger: true
  - set_pipeline: reconfigure-pipelines
    file: pipelines-and-tasks/pipelines/reconfigure.yml

- name: reconfigure-promote
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [reconfigure-self]
  - get: latest-concourse
    trigger: true
  # - load_var: release-version
  #   file: latest-concourse/version
  #
  # workaround for https://github.com/concourse/concourse/issues/5709
  - task: prep-var-files
    config:
      platform: linux

      image_resource:
        type: registry-image
        source: {repository: ubuntu}

      inputs:
      - name: latest-concourse

      outputs:
      - name: vars

      run:
        path: bash
        args:
        - -exc
        - |
          echo "release_version: $(cat latest-concourse/version)" >> vars/vars.yml
  - set_pipeline: promote
    file: pipelines-and-tasks/pipelines/promote.yml
    var_files:
    - vars/vars.yml

- name: reconfigure-resource-pipelines
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [reconfigure-self]
  - task: render-resource-templates
    file: pipelines-and-tasks/tasks/render-resource-pipeline-templates.yml
    params:
      RESOURCES: |
        git
        time
        docker-image
        registry-image
        cf
        bosh-io-release
        bosh-io-stemcell
        tracker
        hg
        github-release
        semver
        s3
        concourse-pipeline
        pool
        datadog-event
        mock
    input_mapping: {pipelines: pipelines-and-tasks}
  - set_pipeline: git
    file: rendered_pipelines/git.yml
  - set_pipeline: time
    file: rendered_pipelines/time.yml
  - set_pipeline: docker-image
    file: rendered_pipelines/docker-image.yml
  - set_pipeline: registry-image
    file: rendered_pipelines/registry-image.yml
  - set_pipeline: cf
    file: rendered_pipelines/cf.yml
  - set_pipeline: bosh-io-release
    file: rendered_pipelines/bosh-io-release.yml
  - set_pipeline: bosh-io-stemcell
    file: rendered_pipelines/bosh-io-stemcell.yml
  - set_pipeline: tracker
    file: rendered_pipelines/tracker.yml
  - set_pipeline: hg
    file: rendered_pipelines/hg.yml
  - set_pipeline: github-release
    file: rendered_pipelines/github-release.yml
  - set_pipeline: semver
    file: rendered_pipelines/semver.yml
  - set_pipeline: s3
    file: rendered_pipelines/s3.yml
  - set_pipeline: concourse-pipeline
    file: rendered_pipelines/concourse-pipeline.yml
  - set_pipeline: pool
    file: rendered_pipelines/pool.yml
  - set_pipeline: datadog-event
    file: rendered_pipelines/datadog-event.yml
  - set_pipeline: mock
    file: rendered_pipelines/mock.yml

- name: reconfigure-platform-automation
  plan:
  - get: pipelines-and-tasks
    passed: [reconfigure-self]
    trigger: true
  - get: concourse-for-platform-automation
    trigger: true
  - task: render-platform-automation
    params:
      PIPELINES: pipeline.yml
    input_mapping: {pipelines: concourse-for-platform-automation}
    file: pipelines-and-tasks/tasks/render-ytt.yml
  - set_pipeline: concourse-for-platform-automation
    file: rendered_pipelines/pipeline.yml

- name: unit
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [reconfigure-self]
  - task: unit
    file: pipelines-and-tasks/tasks/ci-unit.yml
    input_mapping: {ci: pipelines-and-tasks}
  on_failure: &notify
    put: notify
    params:
      mode: normal
      alert_type: failed

- name: reconfigure-pipelines
  plan:
  - get: pipelines-and-tasks
    trigger: true
    passed: [unit]
  - get: baggageclaim-ci
    trigger: true
  - get: concourse-for-k8s
    trigger: true
  - get: flight-attendant-ci
    trigger: true
  - get: ctop-ci
    trigger: true
  - set_pipeline: concourse
    file: pipelines-and-tasks/pipelines/concourse.yml
  - set_pipeline: helm-chart
    file: pipelines-and-tasks/pipelines/helm-chart.yml
  - set_pipeline: prs
    team: contributor
    file: pipelines-and-tasks/pipelines/prs.yml
  - set_pipeline: helm-prs
    file: pipelines-and-tasks/pipelines/helm-prs.yml
    vars:
      pr_base_branch: master
      concourse_base_branch: master
      concourse_image_name: concourse/concourse
      concourse_image_tag: latest
  - set_pipeline: helm-prs-dev
    file: pipelines-and-tasks/pipelines/helm-prs.yml
    vars:
      pr_base_branch: dev
      concourse_base_branch: master
      concourse_image_name: concourse/concourse-rc
      concourse_image_tag: latest
  - set_pipeline: helm-prs-5.5.x
    file: pipelines-and-tasks/pipelines/helm-prs.yml
    vars:
      pr_base_branch: release/5.5.x
      concourse_base_branch: release/5.5.x
      concourse_image_name: concourse/concourse
      concourse_image_tag: 5.5
  - set_pipeline: helm-prs-5.7.x
    file: pipelines-and-tasks/pipelines/helm-prs.yml
    vars:
      pr_base_branch: release/5.7.x
      concourse_base_branch: release/5.7.x
      concourse_image_name: concourse/concourse
      concourse_image_tag: 5.7
  - set_pipeline: baggageclaim
    file: baggageclaim-ci/ci/pipeline.yml
  - set_pipeline: bosh-cleanup
    file: pipelines-and-tasks/pipelines/bosh-cleanup.yml
  - set_pipeline: wings
    file: pipelines-and-tasks/pipelines/wings.yml
  - set_pipeline: norsk-mirror
    file: pipelines-and-tasks/pipelines/norsk-mirror.yml
  - set_pipeline: release-5.5.x
    file: pipelines-and-tasks/pipelines/release.yml
    vars:
      release_major: "5"
      release_minor: "5.5"
      latest_release: "5.5"
      concourse_smoke_deployment_name: "concourse-smoke-5-5"
      bin_smoke_use_https: "true"
      end_of_general_support: "2020-07-31"
  - set_pipeline: release-6.0.x
    file: pipelines-and-tasks/pipelines/release-v6.yml
    vars:
      release_major: "6"
      release_minor: "6.0"
      latest_release: "6.0"
      concourse_smoke_deployment_name: "concourse-smoke-6-0"
      bin_smoke_use_https: "true"
  - set_pipeline: release-6.1.x
    file: pipelines-and-tasks/pipelines/release-v6.yml
    vars:
      release_major: "6"
      release_minor: "6.1"
      latest_release: "6.0"
      concourse_smoke_deployment_name: "concourse-smoke-6-1"
      bin_smoke_use_https: "true"
  - set_pipeline: release-6.3.x
    file: pipelines-and-tasks/pipelines/release-v6.yml
    vars:
      release_major: "6"
      release_minor: "6.3"
      latest_release: "6.2"
      concourse_smoke_deployment_name: "concourse-smoke-6-3"
      bin_smoke_use_https: "true"
  - set_pipeline: release-6.4.x
    file: pipelines-and-tasks/pipelines/release-v6.yml
    vars:
      release_major: "6"
      release_minor: "6.4"
      latest_release: "6.3"
      concourse_smoke_deployment_name: "concourse-smoke-6-4"
      bin_smoke_use_https: "true"
  - set_pipeline: algorithm-v3
    file: pipelines-and-tasks/pipelines/branch.yml
    vars:
      branch_name: algorithm-v3
      environment: algorithm
  - set_pipeline: runtime-drills
    file: pipelines-and-tasks/pipelines/branch.yml
    vars:
      branch_name: master
      environment: runtime-drills
  - set_pipeline: set-zstd-drills-env
    file: pipelines-and-tasks/pipelines/branch.yml
    vars:
      branch_name: use_zstd
      environment: use-zstd
  - set_pipeline: enterprise-helm-chart
    file: concourse-for-k8s/ci/pipeline.yml
    vars:
      concourse_chart_branch: release/6.3.x
      concourse_minor: "6.3"
  - set_pipeline: datadog-dashboards
    file: pipelines-and-tasks/pipelines/datadog-dashboards.yml
  - set_pipeline: flight-attendant
    file: flight-attendant-ci/ci/pipeline.yml
  - set_pipeline: ctop
    file: ctop-ci/ci/pipeline.yml
  on_failure: *notify
  on_error: *notify

- name: reconfigure-monitoring-pipeline
  plan:
  - get: oxygen-mask
    trigger: true
  - get: ruby-alpine-image
  - task: generate-monitor-yml
    image: ruby-alpine-image
    config:
      platform: linux
      inputs:
      - name: oxygen-mask
      outputs:
      - name: oxygen-mask
      run:
        dir: oxygen-mask
        path: sh
        args:
        - -c
        - |
          erb monitor.yml > gen-monitor.yml
  - set_pipeline: monitoring-stats
    file: oxygen-mask/gen-monitor.yml
    vars:
      atc_url: https://hush-house.pivotal.io
      interval: 30s
      username: ((basic_auth.username))
      password: ((basic_auth.password))
      team_name: main
      pipeline_name: monitoring
      datadog_api_key: ((datadog_api_key))
      github_access_token: ((concourse_github_dummy.access_token))

members: &members
- |
  name: Rui
  slack_id: <@W012PK4PCR1>
- |
  name: Alex
  slack_id: <@W013S7H1JCT>
- |
  name: Taylor
  slack_id: <@W011PN57Q8Y>
- |
  name: Muntasir
  slack_id: <@W011EC91F5L>
- |
  name: Esteban
  slack_id: <@U01LJULP0LS>
- |
  name: Navdeep
  slack_id: <@W013K986P7G>
- |
  name: Matthew
  slack_id: <@W013BA1CNMD>
- |
  name: Clara
  slack_id: <@W013B99CVU7>
- |
  name: Aidan
  slack_id: <@W013S2H8ABU>
- |
  name: Scott
  slack_id: <@W013B9SAXJT>
- |
  name: Daniel
  slack_id: <@W013QLP3YJZ>

resource_types:
- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: static-list-resource
  type: registry-image
  source:
    repository: taylorsilva/static-list-resource

- name: cron-resource
  type: registry-image
  source:
    repository: cftoolsmiths/cron-resource

resources:
- name: slack-message
  icon: slack
  type: slack-notification
  source:
    url: ((slack_hooks.concourse-private))

- name: first-day-of-month
  icon: calendar
  type: cron-resource
  source:
    expression: "0 0 1 * *"
    location: "America/Toronto"

- name: good-morning
  icon: calendar
  type: time
  source:
    start: 8:00 AM
    stop: 9:00 AM
    location: "America/Toronto"
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: friday-morning
  icon: calendar
  type: time
  source:
    start: 11:00 AM
    stop: 11:30 AM
    location: "America/Toronto"
    days: [Friday]

- name: lunch
  icon: format-list-bulleted-square
  type: static-list-resource
  source:
    unique: lunch
    list: *members

- name: standup
  icon: format-list-bulleted-square
  type: static-list-resource
  source:
    unique: standup
    list: *members

- name: retro
  icon: format-list-bulleted-square
  type: static-list-resource
  source:
    unique: retro
    list: *members

jobs:
- name: rotation-lunch
  plan:
  - in_parallel:
    - get: first-day-of-month
      trigger: true
    - get: lunch
  - load_var: member
    file: lunch/item
    format: yml
  - put: slack-message
    params:
      text: |
        ((.:member.slack_id)) will organize this month's team lunch!
        1. Set a date/time and create a calendar event
        2. Think of something the team can do/watch (e.g. codenames)
  - put: next-months-organizer
    resource: lunch
    params:
      previous: lunch/item

- name: rotation-standup
  plan:
  - in_parallel:
    - get: good-morning
      trigger: true
    - get: standup
  - load_var: member
    file: standup/item
    format: yml
  - put: slack-message
    params:
      text_file: standup/item
      text: |
        ((.:member.slack_id)) is running standup today! If they can't do it today someone else should volunteer.
        1. <https://project.concourse-ci.org/pull-requests|Open the PR's tab in cadet> and start screen sharing. Open all unassigned PR's. For each PR ask who wants to review it and assign them.
        2. <https://project.concourse-ci.org/pairs|Go to the pairs tab>. Ask if anyone is sticking or soloing. Then hit "shuffle" and "apply".
        3. Stop screensharing. Give your daily update and pass it on to someone else.
        4. Last person does the countdown clap!
  - put: tomorrows-standup-host
    resource: standup
    params:
      previous: standup/item

- name: rotation-retro
  plan:
  - in_parallel:
    - get: friday-morning
      trigger: true
    - get: retro
  - load_var: member
    file: retro/item
    format: yml
  - put: slack-message
    params:
      text_file: retro/item
      text: |
        ((.:member.slack_id)) is running retro today! If they can't do it today someone else should volunteer.
        1. <https://postfacto.vmware.com/retros/concourse|Everyone should open the retro board>. No need to screenshare, everyone sees the same thing.
        2. Allow everyone 5-10mins to add items to the board.
        2. Go through all action items and check off any completed items.
        3. Start going through the items on the board. If you don't want to think about which item to pick you can press the right arrow on your keyboard to auto-select an item (goes through all greens, then yellows, then reds, saving the green with the most hearts for last). Add action items as you go.
        4. Once the board is cleared and all action items recorded you may archive the retro board (Menu > Archive Retro)
  - put: next-weeks-host
    resource: retro
    params:
      previous: retro/item

- name: manual-skip-lunch
  plan:
  - get: lunch
  - put: next-person
    resource: lunch
    params:
      previous: lunch/item

- name: manual-skip-retro
  plan:
  - get: retro
  - put: next-person
    resource: retro
    params:
      previous: retro/item

- name: manual-skip-standup
  plan:
  - get: standup
  - put: next-person
    resource: standup
    params:
      previous: standup/item
